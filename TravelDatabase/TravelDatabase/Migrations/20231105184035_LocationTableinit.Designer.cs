// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelDatabase.DataAccess.SqLite;

#nullable disable

namespace TravelDatabase.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20231105184035_LocationTableinit")]
    partial class LocationTableinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("TravelDatabase.Entities.Capital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapitalName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Continent")
                        .HasColumnType("TEXT");

                    b.Property<int>("Latitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Longitude")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Capital");
                });

            modelBuilder.Entity("TravelDatabase.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrivalId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CapitalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.HasIndex("UserId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("TravelDatabase.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapitalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TravelDatabase.Entities.Trip", b =>
                {
                    b.HasOne("TravelDatabase.Entities.Capital", null)
                        .WithMany("Trip")
                        .HasForeignKey("CapitalId");

                    b.HasOne("TravelDatabase.Entities.User", "User")
                        .WithMany("Trip")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDatabase.Entities.User", b =>
                {
                    b.HasOne("TravelDatabase.Entities.Capital", "Capital")
                        .WithMany("User")
                        .HasForeignKey("CapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capital");
                });

            modelBuilder.Entity("TravelDatabase.Entities.Capital", b =>
                {
                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDatabase.Entities.User", b =>
                {
                    b.Navigation("Trip");
                });
#pragma warning restore 612, 618
        }
    }
}
